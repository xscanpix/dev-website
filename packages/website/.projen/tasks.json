{
  "tasks": {
    "build": {
      "name": "build",
      "description": "Full release build",
      "steps": [
        {
          "spawn": "pre-compile"
        },
        {
          "spawn": "compile"
        },
        {
          "spawn": "post-compile"
        },
        {
          "spawn": "test"
        },
        {
          "spawn": "package"
        }
      ]
    },
    "compile": {
      "name": "compile",
      "description": "Only compile",
      "steps": [
        {
          "exec": "craco build"
        }
      ]
    },
    "default": {
      "name": "default",
      "description": "Synthesize project files"
    },
    "dev": {
      "name": "dev",
      "description": "Starts the react application",
      "steps": [
        {
          "exec": "craco start & npx tailwindcss -i ./src/styles/main.css -o ./src/index.css --watch"
        }
      ]
    },
    "install": {
      "name": "install",
      "description": "Install project dependencies and update lockfile (non-frozen)",
      "steps": [
        {
          "exec": "pnpm i --no-frozen-lockfile"
        }
      ]
    },
    "install:ci": {
      "name": "install:ci",
      "description": "Install project dependencies using frozen lockfile",
      "steps": [
        {
          "exec": "pnpm i --frozen-lockfile"
        }
      ]
    },
    "package": {
      "name": "package",
      "description": "Creates the distribution package"
    },
    "post-compile": {
      "name": "post-compile",
      "description": "Runs after successful compilation"
    },
    "post-upgrade": {
      "name": "post-upgrade",
      "description": "Runs after upgrading dependencies"
    },
    "pre-compile": {
      "name": "pre-compile",
      "description": "Prepare the project for compilation"
    },
    "test": {
      "name": "test",
      "description": "Run tests",
      "steps": [
        {
          "exec": "craco test --watchAll=false --passWithNoTests"
        }
      ]
    },
    "upgrade": {
      "name": "upgrade",
      "description": "upgrade dependencies",
      "env": {
        "CI": "0"
      },
      "steps": [
        {
          "exec": "pnpm dlx npm-check-updates@16 --upgrade --target=minor --peer --dep=dev,peer,prod,optional --filter=@craco/craco,@craco/types,@eslint/js,@testing-library/jest-dom,@testing-library/react,@testing-library/user-event,@types/eslint__js,@types/jest,@types/react,@types/react-dom,autoprefixer,craco-esbuild,eslint,globals,postcss,postcss-import,prettier,tailwindcss,tailwindcss-animate,typescript-eslint,@radix-ui/react-slot,class-variance-authority,clsx,lucide-react,react,react-dom,react-router-dom,tailwind-merge,web-vitals"
        },
        {
          "exec": "pnpm i --no-frozen-lockfile"
        },
        {
          "exec": "pnpm update @craco/craco @craco/types @eslint/js @testing-library/jest-dom @testing-library/react @testing-library/user-event @types/eslint__js @types/jest @types/node @types/react @types/react-dom autoprefixer craco-esbuild eslint globals postcss postcss-import prettier react-scripts tailwindcss tailwindcss-animate typescript-eslint typescript @radix-ui/react-slot class-variance-authority clsx lucide-react react react-dom react-router-dom tailwind-merge web-vitals"
        },
        {
          "exec": "npx projen"
        },
        {
          "spawn": "post-upgrade"
        }
      ]
    },
    "watch": {
      "name": "watch",
      "description": "Watch & compile in the background",
      "steps": [
        {
          "exec": "tsc --build -w"
        }
      ]
    }
  },
  "env": {
    "PATH": "$(pnpm -c exec \"node --print process.env.PATH\")"
  },
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \"npx projen\"."
}
